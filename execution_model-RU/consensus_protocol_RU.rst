.. _consensus_protocol:

************************************************** ************
Алгоритм консенсуса Каспера
************************************************** ************
Узлы, которые принимают роль валидации, имеют функцию достижения консенсуса в отношении состояния цепочки. Валидаторы также гарантируют, что блок-цепочка является самосогласованной и не подделана и защищена от атаки Сибила.

Протокол формирования консенсуса Casper включает в себя следующие стадии: связывание (bonding), распутывание (unbonding) и цикл голосования/делания ставок (betting), которые приводят к согласию валидаторов о состоянии блокчейна. Цель децентрализованного протокола – гарантировать непротиворечивость блокчейна или его частей (в зависимости от сегментирования) на множестве узлов. Всякому консенсус-протоколу, чтобы её достичь, необходимо выдавать результат, т.е. доказательство безопасности и список свойств прекращения процессов для определенных классов “умных контрактов” в широком спектре условий и при различных режимах работы вычислительного и сетевого оборудования.

Консенсус-протокол RChain применяет механизм, схожий на применяемый в Ethereum. Его называют протоколом с доказательством доли владения (“proof-of-stake”), но этот термин вызывает слишком много опасений излишней централизации. Валидаторы вносят депозит, который находится на отдельном счете, над которым у валидатора нет контроля. В отличие от Ethereum, где голосование происходит голосование по вопросу – включать блок в блокчейн или нет, на RChain валидаторы голосуют по наборам логических предположений. Предположение – набор утверждений о блокчейне. Например, какие транзакции (т.е. предложенные изменения состояний) должны быть включены, в какой последовательности и другие свойства. Конкретный пример предположения: “транзакция t должна произойти перед транзакцией s” и “транзакция r не должна быть включена”. За дополнительной информацией см.: `Logic for Betting on Propositions (v0.7)`_.

.. _Logic for Betting on Propositions (v0.7): https://docs.google.com/document/d/1x0-fUU1dK9CT79GUqYUOoejfqY3bNckDcXgIbBTkfkc/edit#heading=h.jzluq1kbohwq

На определенных точках встречи валидаторы вычисляют максимально непротиворечивый набор предположений. В некоторых случаях это может быть вычислительно затратным и на это может уходить слишком много времени. Из-за этого существует условие тайм-аута, при наступлении которого валидаторы обязаны предложить меньшие по объему предположения. Как только консенсус среди валидаторов о максимально большом наборе предположений достигнут, можно формировать следующий блок, обнаружив минимальную модель, при которой предположения верны. 

Давайте пройдем типичную последовательность:Валидаторы – узлы с особой ролью. Каждый валидатор предоставляет средства, которыми он больше не может распоряжаться. Из этих средств формируется подобие страховки, выплачиваемой другим валидаторам в тот случае, если участник сети нарушает протокол. Клиенты отправляют транзакции валидаторам.Принимающий валидатор создает предположение, включающее последнюю транзакцию. Среди узлов проходят несколько циклов создания ставок:

Давайте пройдем типичную последовательность:



1. Валидаторы – узлы с особой ролью. Каждый валидатор предоставляет средства, которыми он больше не может распоряжаться. Из этих средств формируется подобие страховки, выплачиваемой другим валидаторам в тот случае, если участник сети нарушает протокол. 

2. Клиенты отправляют транзакции валидаторам.

3. Принимающий валидатор создает предположение, включающее последнюю транзакцию. 

4. Среди узлов проходят несколько циклов создания ставок:

   a. Выставляющий ставку валидатор подготавливает ее, включая следующие данные:

   - *source* = источник ставки

   - *target* = направление или цель ставки

   - *claim* = утверждение ставки. Оно может быть блоком, предположением или максимально непротиворечивым набором предположений.

   - *belief* = уверенность игрока в утверждении при данном наборе свидетельств в обосновании. Это обозначение стратегии ставок, которую выбрал валидатор.

   - *justification*. Доказательства, почему эта ставка оправдана.

     b. Валидатор размещает ставку.

     c. Принимающий валидатор оценивает ставку. Стоит отметить, что структуры доказательств могут быть использованы для определения различных свойств сети. Например, существуют алгоритмы, которые определяют неоднозначность, создают граф доказательств или определяют, когда размер ставки превышает максимальный объем. Стоит отметить, мы рассмотрели множество векторов атаки и использовали наработки в области теории игр при разработке протокола. 

     5. 'Циклы выставления ставок продолжаются до тех пор, пока не будет найдено доказательство. Отметьте:

        d.Цель цикла выставления ставок – достижение валидаторами консенсуса по максимальному объему предположений.
        e. Требуемое условие доказательства в том, что ⅔ валидаторов ведут себя рациональным образом.
        f.  Цикл выставления ставок обязан конвергировать через определенное время.
        g.  В процессе конвергенции обработка транзакций должна быть частично синхронной.
        h. Голосование по вопросу предположений позволит синтезировать гораздо большие куски блокчейна за один цикл.
        i. Циклы конвергируют быстро, если конфликтов не обнаружено.

     6.Главным преимуществом подхода голосования за предположения является возможность одновременного формирования нескольких блоков. Данное предложение обходит ограничения на максимальный размер блока. Максимально непротиворечивый размер набора предположений может включать в себя сотни или даже тысячи блоков, которые можно сформировать одновременно. Это дает гигантское преимущество в скорости работы по сравнению с существующими блокчейнами. 


Для более подробной информации смотрите:
* `Consensus Games`_: Аксиомная работа Анализа и Компиляции в консенснусных протоколах.
* Для более подробной информации об Ethereum’s Casper и дискуссии в `Ethereum Research Gitter`_ и `Reddit/ethereum`_.
.. _Consensus Games: https://github.comleithaus/pi4u/blob/master/cg/cg.pdf
.. _Logic for Betting -- On Betting on Propositions: https://docs.google.com/document/d/1ZHaCXMlDZv-okGcRJ6P4-zWdqVDJSe-9bvEZe9jwpig/edit
.. _Ethereum Research Gitter: https://gitter.im/ethereum/research
.. _Reddit/ethereum: https://www.reddit.com/r/ethereum
